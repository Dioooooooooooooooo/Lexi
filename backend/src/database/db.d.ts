/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from 'kysely';

export type Generated<T> =
  T extends ColumnType<infer S, infer I, infer U>
    ? ColumnType<S, I | undefined, U>
    : ColumnType<T, T | undefined, T>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface AuthAuthProviders {
  access_token: string | null;
  created_at: Generated<Timestamp>;
  email: string | null;
  id: Generated<string>;
  last_used_at: Timestamp | null;
  password_hash: string | null;
  provider_type: string;
  provider_user_id: string | null;
  refresh_token: string | null;
  token_expires_at: Timestamp | null;
  updated_at: Generated<Timestamp>;
  user_id: string | null;
}

export interface AuthEmailVerificationTokens {
  created_at: Generated<Timestamp>;
  expires_at: Timestamp;
  id: Generated<string>;
  token: string;
  used: boolean;
  user_id: string;
}

export interface AuthLoginLogs {
  device: string | null;
  id: Generated<string>;
  ip_address: string | null;
  location: string | null;
  logged_in_at: Timestamp | null;
  user_agent: string | null;
  user_id: string | null;
}

export interface AuthLoginStreaks {
  id: Generated<string>;
  pupil_id: Generated<string>;
  current_streak: number;
  longest_streak: number;
  last_login_date: Date;
}

export interface AuthSessions {
  id: Generated<string>;
  user_id: Generated<string>;
  duration: number;
  created_at: Generated<Date>;
  end_at: Generated<Date>;
}

export interface AuthPasswordResetTokens {
  created_at: Generated<Timestamp>;
  expires_at: Timestamp;
  id: Generated<string>;
  token: string;
  used: boolean;
  user_id: string;
}

export interface AuthPermissions {
  description: string | null;
  id: Generated<string>;
  name: string;
}

export interface AuthRefreshTokens {
  created_at: Generated<Timestamp>;
  expires_at: Timestamp;
  id: Generated<string>;
  revoked: boolean;
  token: string;
  updated_at: Generated<Timestamp>;
  user_id: string;
}

export interface AuthRolePermissions {
  permission_id: string;
  role_id: number;
}

export interface AuthRoles {
  description: string | null;
  id: Generated<number>;
  name: string;
}

export interface AuthUserRoles {
  role_id: number;
  user_id: string;
}

export interface AuthUsers {
  avatar: string | null;
  created_at: Generated<Timestamp>;
  email: string;
  first_name: string;
  id: Generated<string>;
  is_email_verified: boolean | null;
  is_phone_verified: boolean | null;
  last_name: string;
  phone: string | null;
  updated_at: Generated<Timestamp>;
  username: string;
}

export interface Classrooms {
  created_at: Generated<Timestamp>;
  description: string | null;
  id: Generated<string>;
  join_code: string | null;
  name: string;
  teacher_id: string;
  updated_at: Timestamp | null;
}

export interface Genres {
  created_at: Generated<Timestamp | null>;
  id: Generated<string>;
  name: string | null;
}

export interface MinigameLogs {
  created_at: Timestamp | null;
  id: Generated<string>;
  minigame_id: string | null;
  pupil_id: string | null;
  reading_session_id: string | null;
  result: number | null;
}

export interface Minigames {
  created_at: Generated<Timestamp | null>;
  id: Generated<string>;
  max_score: number | null;
  metadata: string | null;
  minigame_type: number | null;
  part_num: number | null;
  reading_material_id: string | null;
}

export interface PupilLeaderboard {
  id: Generated<string>;
  level: number;
  pupil_id: string;
  recorded_at: Timestamp;
}

export interface Pupils {
  age: number | null;
  created_at: Generated<Timestamp>;
  grade_level: number | null;
  id: Generated<string>;
  level: Generated<number | null>;
  updated_at: Timestamp | null;
  user_id: string;
}

export interface ReadingMaterialGenres {
  genre_id: string | null;
  id: Generated<string>;
  reading_material_id: string | null;
}

export interface ReadingMaterials {
  author: string | null;
  content: string | null;
  cover: string | null;
  created_at: Timestamp | null;
  description: string | null;
  difficulty: number | null;
  grade_level: number | null;
  id: Generated<string>;
  is_deped: boolean | null;
  title: string | null;
}

export interface ReadingSessions {
  completed_at: Timestamp | null;
  completion_percentage: number | null;
  id: Generated<string>;
  pupil_id: string | null;
  reading_material_id: string | null;
  started_at: Generated<Timestamp | null>;
}

export interface Teachers {
  created_at: Generated<Timestamp>;
  id: Generated<string>;
  updated_at: Timestamp | null;
  user_id: string;
}

export interface Achievements {
  id: Generated<string>;
  name: string | null;
  description: string | null;
  badge: string | null;
  created_at: Timestamp | null;
}

export interface Activities {
  id: Generated<string>;
  title: string | null;
  description: string | null;
  reading_material_id: string | null;
  classroom_id: string | null;
}

export interface PupilAchievements {
  id: Generated<string>;
  pupil_id: string;
  achievement_id: string;
  earned_at: Generated<Timestamp>;
}

export interface ActivityLogs {
  id: Generated<string>;
  activity_id: string | null;
  minigame_log_id: string | null;
  completed_at: Timestamp | null;
}

export interface DB {
  'auth.auth_providers': AuthAuthProviders;
  'auth.email_verification_tokens': AuthEmailVerificationTokens;
  'auth.login_streaks': AuthLoginStreaks;
  'auth.sessions': AuthSessions;
  'auth.password_reset_tokens': AuthPasswordResetTokens;
  'auth.permissions': AuthPermissions;
  'auth.refresh_tokens': AuthRefreshTokens;
  'auth.role_permissions': AuthRolePermissions;
  'auth.roles': AuthRoles;
  'auth.user_roles': AuthUserRoles;
  'auth.users': AuthUsers;
  'public.classrooms': Classrooms;
  'public.genres': Genres;
  'public.minigame_logs': MinigameLogs;
  'public.minigames': Minigames;
  'public.pupil_leaderboard': PupilLeaderboard;
  'public.pupils': Pupils;
  'public.reading_material_genres': ReadingMaterialGenres;
  'public.reading_materials': ReadingMaterials;
  'public.reading_sessions': ReadingSessions;
  'public.teachers': Teachers;
  'public.achievements': Achievements;
  'public.activities': Activities;
  'public.activity_logs': ActivityLogs;
  'public.pupil_achievements': PupilAchievements;
}
