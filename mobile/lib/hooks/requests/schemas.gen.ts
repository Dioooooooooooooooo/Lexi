// This file is auto-generated by @hey-api/openapi-ts

export const $RegisterDto = {
  type: 'object',
  properties: {
    username: {
      type: 'string',
      description: 'Username',
      example: 'johndoe1',
      minLength: 8,
    },
    first_name: {
      type: 'string',
      description: 'User first name',
      example: 'John',
      minLength: 1,
    },
    last_name: {
      type: 'string',
      description: 'User last name',
      example: 'Doe',
      minLength: 1,
    },
    email: {
      type: 'string',
      description: 'User email',
      example: 'john.doe@example.com',
    },
    password: {
      type: 'string',
      description: 'User password',
      example: 'securePassword123',
    },
    confirm_password: {
      type: 'string',
      description: 'Password confirmation',
      example: 'securePassword123',
    },
    role: {
      type: 'string',
      description: 'User role',
      example: 'Pupil',
      enum: ['Pupil', 'Teacher'],
    },
  },
  required: [
    'username',
    'first_name',
    'last_name',
    'email',
    'password',
    'confirm_password',
    'role',
  ],
} as const;

export const $UserResponseDto = {
  type: 'object',
  properties: {
    id: {
      type: 'string',
      description: 'User ID',
      example: '123e4567-e89b-12d3-a456-426614174000',
    },
    email: {
      type: 'string',
      description: 'Email',
      nullable: true,
    },
    first_name: {
      type: 'string',
      description: 'First name',
      nullable: true,
    },
    last_name: {
      type: 'string',
      description: 'Last name',
      nullable: true,
    },
    role: {
      type: 'string',
      description: 'User role',
      nullable: true,
    },
    created_at: {
      format: 'date-time',
      type: 'string',
      description: 'Created at',
    },
    updated_at: {
      format: 'date-time',
      type: 'string',
      description: 'Created at',
    },
  },
  required: ['id', 'email', 'first_name', 'last_name', 'role'],
} as const;

export const $AuthResponseDto = {
  type: 'object',
  properties: {
    access_token: {
      type: 'string',
      description: 'Access token',
    },
    user: {
      description: 'User info',
      allOf: [
        {
          $ref: '#/components/schemas/UserResponseDto',
        },
      ],
    },
    refresh_token: {
      type: 'string',
      description: 'Refresh token',
    },
  },
  required: ['access_token', 'user'],
} as const;

export const $ErrorResponseDto = {
  type: 'object',
  properties: {
    message: {
      type: 'string',
      example: 'Something went wrong',
    },
    error: {
      type: 'string',
      example: 'Field "name" must not be empty',
      description: 'Detailed error, if any',
    },
  },
  required: ['message'],
} as const;

export const $LoginDto = {
  type: 'object',
  properties: {
    email: {
      type: 'string',
      description: 'User email',
      example: 'john.doe@example.com',
    },
    password: {
      type: 'string',
      description: 'User password',
      example: 'securePassword123',
    },
  },
  required: ['email', 'password'],
} as const;

export const $SuccessResponseDto = {
  type: 'object',
  properties: {
    status: {
      type: 'string',
      description: 'Response status',
    },
    message: {
      type: 'string',
      example: 'Request successful',
    },
    data: {
      type: 'object',
      description: 'Response data',
    },
  },
  required: ['status', 'message', 'data'],
} as const;

export const $GoogleExchangeTokenDto = {
  type: 'object',
  properties: {
    id_token: {
      type: 'string',
      description: 'Google ID Token',
    },
  },
  required: ['id_token'],
} as const;

export const $RefreshTokenDto = {
  type: 'object',
  properties: {
    refresh_token: {
      type: 'string',
      description: 'Refresh token',
    },
  },
  required: ['refresh_token'],
} as const;

export const $ForgotPasswordDto = {
  type: 'object',
  properties: {
    email: {
      type: 'string',
      description: 'User email',
      example: 'john.doe@example.com',
    },
  },
  required: ['email'],
} as const;

export const $ResetPasswordDto = {
  type: 'object',
  properties: {
    token: {
      type: 'string',
      description: 'Reset token',
    },
    new_password: {
      type: 'string',
      description: 'New password',
      example: 'newSecurePassword123',
    },
  },
  required: ['token', 'new_password'],
} as const;

export const $UpdateProfileDto = {
  type: 'object',
  properties: {
    username: {
      type: 'string',
      description: 'Username',
      example: 'janes123',
      minLength: 8,
    },
    first_name: {
      type: 'string',
      description: 'First name',
      example: 'Jane',
    },
    last_name: {
      type: 'string',
      description: 'Last name',
      example: 'Smith',
    },
    email: {
      type: 'string',
      description: 'Email address',
    },
    avatar: {
      type: 'string',
      description: 'Avatar',
    },
  },
} as const;

export const $ChangePasswordDto = {
  type: 'object',
  properties: {
    current_password: {
      type: 'string',
      description: 'Current password',
    },
    new_password: {
      type: 'string',
      description: 'New password',
    },
  },
  required: ['current_password', 'new_password'],
} as const;

export const $UpdatePupilProfileDto = {
  type: 'object',
  properties: {
    age: {
      type: 'number',
      description: 'Age',
      example: 10,
    },
    grade_level: {
      type: 'number',
      description: 'Grade Level',
      example: 6,
    },
  },
  required: ['age', 'grade_level'],
} as const;

export const $CreateClassroomDto = {
  type: 'object',
  properties: {
    name: {
      type: 'string',
      description: 'Classroom Name',
      example: 'Section Maya',
    },
    description: {
      type: 'string',
      description: 'Classroom Name',
      example: 'Section Maya',
    },
  },
  required: ['name', 'description'],
} as const;

export const $EnrollPupilDto = {
  type: 'object',
  properties: {
    classroom_id: {
      type: 'string',
      description: 'Classroom Id',
      example: 'eb365c92-6366-4c92-bb8b-f3160187be69',
    },
    pupil_ids: {
      description: 'Array of Pupil Ids',
      example: [
        'a1b40682-1204-48b4-9b5e-309b29ff640a',
        'ad8e218c-c1cf-4718-b99d-72af5fafffb9',
      ],
      type: 'array',
      items: {
        type: 'array',
      },
    },
  },
  required: ['classroom_id', 'pupil_ids'],
} as const;

export const $UnEnrollPupilDto = {
  type: 'object',
  properties: {
    classroom_id: {
      type: 'string',
      description: 'Classroom Id',
      example: 'eb365c92-6366-4c92-bb8b-f3160187be69',
    },
    pupil_ids: {
      description: 'Array of Pupil Ids',
      example: [
        'a1b40682-1204-48b4-9b5e-309b29ff640a',
        'ad8e218c-c1cf-4718-b99d-72af5fafffb9',
      ],
      type: 'array',
      items: {
        type: 'array',
      },
    },
  },
  required: ['classroom_id', 'pupil_ids'],
} as const;

export const $JoinClassroomDto = {
  type: 'object',
  properties: {
    code: {
      type: 'string',
      description: 'Classroom Code',
      example: 'YOIT1A',
    },
  },
  required: ['code'],
} as const;

export const $LeaveClassroomDto = {
  type: 'object',
  properties: {
    classroom_id: {
      type: 'string',
      description: 'Classroom Id',
      example: 'b2dbdc0f-ac02-4404-b1a9-d36a4c7c1078',
    },
  },
  required: ['classroom_id'],
} as const;

export const $UpdateClassroomDto = {
  type: 'object',
  properties: {
    name: {
      type: 'string',
      description: 'Classroom Name',
      example: 'Section Maya',
    },
    description: {
      type: 'string',
      description: 'Classroom Name',
      example: 'Section Maya',
    },
  },
} as const;

export const $CreateWordsFromLettersGame = {
  type: 'object',
  properties: {
    reading_material_id: {
      type: 'string',
      description: 'Reading Material Id',
    },
    part_num: {
      type: 'number',
      description:
        'Part number of where the minigame appears in the story. Always 10 for WordsFromLetters.',
      example: 10,
    },
    letters: {
      description: 'Contains the letters needed in creating words.',
      type: 'array',
      items: {
        type: 'string',
      },
    },
    words: {
      description: 'Words that can be created from the letters list.',
      type: 'array',
      items: {
        type: 'string',
      },
    },
  },
  required: ['reading_material_id', 'part_num', 'letters', 'words'],
} as const;

export const $ChoicesObject = {
  type: 'object',
  properties: {
    choice: {
      type: 'string',
      description: 'Choice text',
    },
    answer: {
      type: 'boolean',
      description: 'Whether this choice is correct',
    },
  },
  required: ['choice', 'answer'],
} as const;

export const $CreateChoicesGame = {
  type: 'object',
  properties: {
    reading_material_id: {
      type: 'string',
      description: 'Reading Material Id',
    },
    part_num: {
      type: 'number',
      description: 'Part number of where the minigame appears in the story.',
    },
    question: {
      type: 'string',
      description: 'Question',
    },
    choices: {
      description: 'List of choices.',
      type: 'array',
      items: {
        $ref: '#/components/schemas/ChoicesObject',
      },
    },
    explanation: {
      type: 'string',
      description: 'Explanation of the answer.',
    },
  },
  required: [
    'reading_material_id',
    'part_num',
    'question',
    'choices',
    'explanation',
  ],
} as const;

export const $CreateSentenceRearrangementGame = {
  type: 'object',
  properties: {
    reading_material_id: {
      type: 'string',
      description: 'Reading Material Id',
    },
    part_num: {
      type: 'number',
      description: 'Part number of where the minigame appears in the story.',
    },
    correct_answer: {
      description: 'List of correct answers.',
      type: 'array',
      items: {
        type: 'string',
      },
    },
    parts: {
      description: 'Sentence parts',
      type: 'array',
      items: {
        type: 'string',
      },
    },
    explanation: {
      type: 'string',
      description: 'Explanation of the answer.',
    },
  },
  required: [
    'reading_material_id',
    'part_num',
    'correct_answer',
    'parts',
    'explanation',
  ],
} as const;

export const $CreateMinigameLogDto = {
  type: 'object',
  properties: {
    minigame_id: {
      type: 'string',
      description: 'Minigame ID',
    },
    pupil_id: {
      type: 'string',
      description: 'Pupil ID',
    },
    reading_session_id: {
      type: 'string',
      description: 'Reading Session ID',
    },
    result: {
      type: 'string',
      description: 'Minigame Result in JSON format',
    },
  },
  required: ['minigame_id', 'pupil_id', 'reading_session_id', 'result'],
} as const;

export const $CreateReadingSessionDto = {
  type: 'object',
  properties: {
    reading_material_id: {
      type: 'string',
      description: 'Reading material id',
      example: 'e8425f42-0650-4c5b-8380-d54cf8de481e',
    },
  },
  required: ['reading_material_id'],
} as const;

export const $UpdateReadingSessionDto = {
  type: 'object',
  properties: {
    completion_percentage: {
      type: 'number',
      description: 'Completion percentage of the reading session',
      example: 55.5,
    },
  },
  required: ['completion_percentage'],
} as const;

export const $CreateReadingMaterialDto = {
  type: 'object',
  properties: {
    is_deped: {
      type: 'boolean',
      description: 'Source of the reading material',
    },
    title: {
      type: 'string',
      description: 'Title of the reading material',
    },
    author: {
      type: 'string',
      description: 'Author of the reading material',
    },
    description: {
      type: 'string',
      description: 'Description of the reading material',
    },
    grade_level: {
      type: 'number',
      description: 'Grade level for which the reading material is suitable',
    },
    cover: {
      type: 'string',
      description: 'Cover link image URL for the reading material',
    },
    genres: {
      description: 'List of genre for the reading material',
      type: 'array',
      items: {
        type: 'string',
      },
    },
    content: {
      type: 'string',
      description: 'Content of the reading material',
    },
  },
  required: [
    'is_deped',
    'title',
    'author',
    'description',
    'grade_level',
    'cover',
    'genres',
    'content',
  ],
} as const;

export const $CreateGenreDto = {
  type: 'object',
  properties: {
    name: {
      type: 'string',
      description: 'Name of the genre',
    },
  },
  required: ['name'],
} as const;

export const $CreateActivityDTO = {
  type: 'object',
  properties: {
    title: {
      type: 'string',
      description: 'Activity Name',
      example: 'Cat in the Hat Activity',
    },
    description: {
      type: 'string',
      description: 'Description on what the activity is about',
      example:
        'Read the Cat in the Hat book and understand the adventures of our beloved main characters!',
    },
    reading_material_id: {
      type: 'string',
    },
  },
  required: ['title', 'reading_material_id'],
} as const;

export const $UpdateActivityDTO = {
  type: 'object',
  properties: {
    title: {
      type: 'string',
      description: 'Activity Name',
      example: 'Cat in the Hat Activity',
    },
    description: {
      type: 'string',
      description: 'Description on what the activity is about',
      example:
        'Read the Cat in the Hat book and understand the adventures of our beloved main characters!',
    },
    reading_material_id: {
      type: 'string',
    },
  },
} as const;

export const $CreateActivityLogDto = {
  type: 'object',
  properties: {
    minigame_log_id: {
      type: 'string',
      description: 'Minigame log Id',
    },
  },
  required: ['minigame_log_id'],
} as const;
