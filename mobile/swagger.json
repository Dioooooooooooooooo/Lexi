{"openapi":"3.0.0","paths":{"/":{"get":{"operationId":"AppController_getHello","parameters":[],"responses":{"200":{"description":""}},"tags":["Health"]}},"/health":{"get":{"operationId":"AppController_healthCheck","parameters":[],"responses":{"200":{"description":""}},"tags":["Health"]}},"/auth/register":{"post":{"description":"Create a new user account with email and password","operationId":"AuthController_register","parameters":[],"requestBody":{"required":true,"description":"User registration data","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RegisterDto"},"examples":{"example1":{"summary":"Example registration","description":"A sample user registration","value":{"first_name":"John Doe","last_name":"Doe","email":"john.doe@example.com","password":"securePassword123","confirm_password":"securePassword123","role":"Pupil"}}}}}},"responses":{"201":{"description":"User successfully registered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthResponseDto"},"example":{"message":"User successfully registered","data":{"access_token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...","refresh_token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...","user":{"id":"123e4567-e89b-12d3-a456-426614174000","email":"john.doe@example.com","first_name":"John","last_name":"Doe","role":"Pupil","created_at":"2023-01-01T00:00:00.000Z"}}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDto"},"example":{"statusCode":400,"message":["email must be a valid email","password must be longer than or equal to 6 characters"],"error":"Bad Request"}}}},"409":{"description":"User already exists","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDto"},"example":{"statusCode":409,"message":"User already exists","error":"Conflict"}}}}},"summary":"Register a new user","tags":["Authentication"]}},"/auth/login":{"post":{"description":"Authenticate user with email and password","operationId":"AuthController_login","parameters":[],"requestBody":{"required":true,"description":"User login credentials","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginDto"},"examples":{"example1":{"summary":"Example login","description":"A sample user login","value":{"email":"john.doe@example.com","password":"securePassword123"}}}}}},"responses":{"200":{"description":"User successfully logged in","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SuccessResponseDto"},"example":{"message":"User successfully logged in","data":{"access_token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...","refresh_token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...","user":{"id":"123e4567-e89b-12d3-a456-426614174000","email":"john.doe@example.com","name":"John Doe"}}}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDto"},"example":{"statusCode":400,"message":["email must be a valid email","password should not be empty"],"error":"Bad Request"}}}},"401":{"description":"Invalid credentials","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDto"},"example":{"statusCode":401,"message":"Invalid credentials","error":"Unauthorized"}}}}},"summary":"User login","tags":["Authentication"]}},"/auth/refresh":{"post":{"description":"Get a new access token using refresh token","operationId":"AuthController_refreshToken","parameters":[],"requestBody":{"required":true,"description":"Refresh token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RefreshTokenDto"},"examples":{"example1":{"summary":"Example refresh","description":"A sample refresh token request","value":{"refresh_token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."}}}}}},"responses":{"200":{"description":"Token refreshed successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SuccessResponseDto"},"example":{"message":"Token refreshed successfully","data":{"access_token":{"type":"string","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."},"refresh_token":{"type":"string","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."}}}}}},"401":{"description":"Invalid refresh token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDto"},"example":{"statusCode":401,"message":"Invalid refresh token","error":"Unauthorized"}}}}},"security":[{"JWT-auth":[]}],"summary":"Refresh access token","tags":["Authentication"]}},"/auth/forgot-password":{"post":{"description":"Send a password reset link to user email","operationId":"AuthController_forgotPassword","parameters":[],"requestBody":{"required":true,"description":"User email for password reset","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ForgotPasswordDto"},"examples":{"example1":{"summary":"Example forgot password","description":"A sample forgot password request","value":{"email":"john.doe@example.com"}}}}}},"responses":{"200":{"description":"Password reset email sent (if email exists)","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SuccessResponseDto"},"example":{"message":"If the email exists, a password reset link has been sent."}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDto"},"example":{"statusCode":400,"message":["email must be a valid email"],"error":"Bad Request"}}}}},"security":[{"JWT-auth":[]}],"summary":"Request password reset","tags":["Authentication"]}},"/auth/reset-password":{"post":{"description":"Reset user password using reset token","operationId":"AuthController_resetPassword","parameters":[],"requestBody":{"required":true,"description":"Reset token and new password","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResetPasswordDto"},"examples":{"example1":{"summary":"Example reset password","description":"A sample password reset","value":{"token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...","new_password":"newSecurePassword123"}}}}}},"responses":{"200":{"description":"Password reset successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SuccessResponseDto"},"example":{"message":"Password reset successfully"}}}},"400":{"description":"Invalid or expired reset token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDto"},"example":{"statusCode":400,"message":"Invalid or expired reset token","error":"Bad Request"}}}}},"summary":"Reset password","tags":["Authentication"]}},"/auth/request-email-verification":{"post":{"description":"Request email verification token","operationId":"AuthController_requestEmailVerification","parameters":[],"responses":{"200":{"description":"Email verication sent.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SuccessResponseDto"},"example":{"message":"If the email exists, an email verification link has been sent."}}}}},"security":[{"JWT-auth":[]}],"summary":"Request email verification","tags":["Authentication"]}},"/auth/verify-email":{"get":{"description":"Verify user email using verification token","operationId":"AuthController_verifyEmail","parameters":[{"name":"token","required":true,"in":"query","description":"Email verification token","schema":{"example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...","type":"string"}}],"responses":{"200":{"description":"Email verified successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SuccessResponseDto"},"example":{"message":"Email verified successfully"}}}},"400":{"description":"Invalid or expired verification token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDto"},"example":{"statusCode":400,"message":"Invalid or expired verification token","error":"Bad Request"}}}}},"summary":"Verify email","tags":["Authentication"]}},"/auth/me":{"get":{"description":"Retrieve the authenticated user profile information","operationId":"AuthController_getProfile","parameters":[],"responses":{"200":{"description":"User profile retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SuccessResponseDto"},"example":{"message":"User profile retrieved successfully","data":{"id":"123e4567-e89b-12d3-a456-426614174000","email":"john.doe@example.com","name":"John Doe"}}}}},"401":{"description":"Invalid or missing token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDto"},"example":{"statusCode":401,"message":"Unauthorized","error":"Unauthorized"}}}}},"security":[{"JWT-auth":[]}],"summary":"Get current user profile","tags":["Authentication"]},"patch":{"description":"Update the authenticated user profile information","operationId":"AuthController_updateProfile","parameters":[],"requestBody":{"required":true,"description":"Profile update data","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateProfileDto"},"examples":{"example1":{"summary":"Example profile update","description":"A sample profile update","value":{"name":"John Updated","email":"john.updated@example.com"}}}}}},"responses":{"200":{"description":"Profile updated successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SuccessResponseDto"},"example":{"message":"Profile updated successfully","data":{"id":"123e4567-e89b-12d3-a456-426614174000","email":"john.updated@example.com","name":"John Updated"}}}}},"401":{"description":"Invalid or missing token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDto"},"example":{"statusCode":401,"message":"Unauthorized","error":"Unauthorized"}}}},"409":{"description":"Email already exists","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDto"},"example":{"statusCode":409,"message":"Email already exists","error":"Conflict"}}}}},"security":[{"JWT-auth":[]}],"summary":"Update user profile","tags":["Authentication"]}},"/auth/change-password":{"post":{"description":"Change the authenticated user password","operationId":"AuthController_changePassword","parameters":[],"requestBody":{"required":true,"description":"Current and new password","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ChangePasswordDto"},"examples":{"example1":{"summary":"Example change password","description":"A sample password change","value":{"current_password":"currentPassword123","new_password":"newSecurePassword123"}}}}}},"responses":{"200":{"description":"Password changed successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SuccessResponseDto"},"example":{"message":"Password changed successfully"}}}},"401":{"description":"Invalid or missing token / Current password incorrect","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDto"},"example":{"statusCode":401,"message":"Current password is incorrect","error":"Unauthorized"}}}}},"security":[{"JWT-auth":[]}],"summary":"Change user password","tags":["Authentication"]}},"/auth/logout":{"post":{"description":"Logout the authenticated user and optionally revoke refresh token","operationId":"AuthController_logout","parameters":[],"requestBody":{"required":false,"description":"Optional refresh token to revoke","content":{"application/json":{"schema":{"type":"object","properties":{"refresh_token":{"type":"string","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."}}}}}},"responses":{"200":{"description":"User successfully logged out","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SuccessResponseDto"},"example":{"message":"Successfully logged out"}}}},"401":{"description":"Invalid or missing token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDto"},"example":{"statusCode":401,"message":"Unauthorized","error":"Unauthorized"}}}}},"security":[{"JWT-auth":[]}],"summary":"User logout","tags":["Authentication"]}},"/auth/verify-token":{"get":{"description":"Verify if the provided JWT token is valid and return user info","operationId":"AuthController_verifyToken","parameters":[],"responses":{"200":{"description":"Token is valid","content":{"application/json":{"schema":{"type":"object","properties":{"valid":{"type":"boolean","example":true},"user":{"$ref":"#/components/schemas/UserResponseDto"}}}}}},"401":{"description":"Invalid or expired token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDto"},"example":{"statusCode":401,"message":"Unauthorized","error":"Unauthorized"}}}}},"security":[{"JWT-auth":[]}],"summary":"Verify JWT token","tags":["Authentication"]}},"/auth/debug-login/{email}":{"get":{"description":"Check if user and auth provider exist for debugging","operationId":"AuthController_debugLogin","parameters":[{"name":"email","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":""}},"summary":"Debug login issues","tags":["Authentication"]}},"/auth/debug-db":{"get":{"description":"Check if database tables exist and are accessible","operationId":"AuthController_debugDatabase","parameters":[],"responses":{"200":{"description":""}},"summary":"Debug database connection","tags":["Authentication"]}},"/auth/check-user":{"get":{"description":"Check if a user exists by email or username","operationId":"AuthController_checkUserExists","parameters":[{"name":"fieldType","required":true,"in":"query","description":"Type of field to check (email or username)","schema":{"enum":["email","username"],"type":"string"}},{"name":"fieldValue","required":true,"in":"query","description":"Value to check","schema":{"example":"user@example.com","type":"string"}}],"responses":{"200":{"description":"Field is available","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SuccessResponseDto"},"example":{"message":"Email is available","statusCode":200,"status":"success"}}}},"400":{"description":"Invalid field type or missing parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDto"},"example":{"statusCode":400,"message":"fieldType must be either 'email' or 'username'","error":"Bad Request"}}}},"409":{"description":"Field already exists","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDto"},"example":{"message":"Email already exists","statusCode":409,"status":"error"}}}}},"summary":"Check if user exists","tags":["Authentication"]}},"/auth/profile":{"get":{"deprecated":true,"description":"Retrieve the authenticated user profile information - use /auth/me instead","operationId":"AuthController_getProfileLegacy","parameters":[],"responses":{"200":{"description":"User profile retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserResponseDto"}}}},"401":{"description":"Invalid or missing token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDto"}}}}},"security":[{"JWT-auth":[]}],"summary":"Get user profile (legacy)","tags":["Authentication"]}},"/pupils/me":{"get":{"operationId":"PupilsController_getPupilProfile","parameters":[],"responses":{"201":{"description":"Pupil profile successfully fetched","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SuccessResponseDto"},"example":{"message":"Pupil profile successfully fetched","data":{"age":10,"grade_level":6,"level":20}}}}},"401":{"description":"Invalid credentials","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDto"},"example":{"statusCode":401,"message":"Invalid credentials","error":"Unauthorized"}}}}},"security":[{"JWT-auth":[]}],"summary":"Get user pupil profile","tags":["Pupils"]},"patch":{"operationId":"PupilsController_updatePupilProfile","parameters":[],"requestBody":{"required":true,"description":"Pupil profile update data","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdatePupilProfileDto"},"examples":{"example1":{"summary":"Example update","description":"A sample pupil profile update","value":{"age":12,"grade_level":7}}}}}},"responses":{"201":{"description":"Pupil profile successfully updated","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SuccessResponseDto"},"example":{"message":"Pupil profile successfully updated","data":{"age":10,"grade_level":6,"level":20}}}}},"401":{"description":"Invalid credentials","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDto"},"example":{"statusCode":401,"message":"Invalid credentials","error":"Unauthorized"}}}}},"security":[{"JWT-auth":[]}],"summary":"Update user pupil profile","tags":["Pupils"]}},"/pupils/leaderboard":{"get":{"operationId":"PupilsController_getGlobalPupilLeaderboard","parameters":[],"responses":{"201":{"description":"Global pupil leaderboard successfully fetched","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SuccessResponseDto"},"example":{"message":"Global pupil leaderboard successfully fetched","data":{}}}}},"401":{"description":"Invalid credentials","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDto"},"example":{"statusCode":401,"message":"Invalid credentials","error":"Unauthorized"}}}}},"security":[{"JWT-auth":[]}],"summary":"Get global pupil leaderboard","tags":["Pupils"]}},"/pupils/leaderboard/{pupilId}":{"get":{"operationId":"PupilsController_getPupilLeaderBoardByPupilId","parameters":[],"responses":{"201":{"description":"Pupil leaderboard successfully fetched","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SuccessResponseDto"},"example":{"message":"Global pupil leaderboard successfully fetched","data":{}}}}},"401":{"description":"Invalid credentials","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDto"},"example":{"statusCode":401,"message":"Invalid credentials","error":"Unauthorized"}}}}},"security":[{"JWT-auth":[]}],"summary":"Get pupil leaderboard by pupil ID","tags":["Pupils"]}},"/pupils/{username}":{"get":{"operationId":"PupilsController_getUserByUsername","parameters":[{"name":"username","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"201":{"description":"Pupil profile successfully fetched","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SuccessResponseDto"},"example":{"message":"Profile successfully fetched","data":{"user":{"id":"420eafa8-5fb9-430d-bdd5-04806c52973c","first_name":"John","last_name":"Doe","avatar":"https://example.com","username":"johndoes"},"pupil":{"id":"dfc1c188-409c-4eeb-995f-2836e84f2132","age":12,"grade_level":6,"level":30}}}}}},"401":{"description":"Invalid credentials","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDto"},"example":{"statusCode":401,"message":"Invalid credentials","error":"Unauthorized"}}}}},"security":[{"JWT-auth":[]}],"summary":"Get public pupil profile","tags":["Pupils"]}},"/classrooms":{"post":{"description":"Create classroom with its name and description","operationId":"ClassroomsController_create","parameters":[],"requestBody":{"required":true,"description":"Create classroom data","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateClassroomDto"},"examples":{"example1":{"summary":"Example create classroom","description":"A sample create classroom data","value":{"name":"Section Maya","description":"Friendly classroom"}}}}}},"responses":{"200":{"description":"Classroom created successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/SuccessResponseDto"},"example":{"message":"Classroom created successfully","data":{"id":"123e4567-e89b-12d3-a456-426614174000","name":"Section Maya","description":"Friendly classroom"}}}}},"401":{"description":"Invalid or missing token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponseDto"},"example":{"statusCode":401,"message":"Unauthorized","error":"Unauthorized"}}}}},"security":[{"JWT-auth":[]}],"summary":"Create classroom","tags":["Classrooms"]},"get":{"operationId":"ClassroomsController_findAll","parameters":[],"responses":{"200":{"description":""}},"tags":["Classrooms"]}},"/classrooms/{id}":{"get":{"operationId":"ClassroomsController_findOne","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":""}},"tags":["Classrooms"]},"patch":{"operationId":"ClassroomsController_update","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateClassroomDto"}}}},"responses":{"200":{"description":""}},"tags":["Classrooms"]},"delete":{"operationId":"ClassroomsController_remove","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":""}},"tags":["Classrooms"]}},"/minigames/readingmaterials/{readingMaterialID}/random":{"get":{"operationId":"MinigamesController_findMinigamesByMaterialID","parameters":[{"name":"readingMaterialID","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":""}},"security":[{"JWT-auth":[]}],"summary":"Get 3 random minigames for a specific reading material","tags":["Minigames"]}},"/minigames/{readingSessionID}/random":{"get":{"operationId":"MinigamesController_findMinigamesBySessionID","parameters":[{"name":"readingSessionID","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":""}},"security":[{"JWT-auth":[]}],"summary":"Get 3 random minigames for a specific reading session","tags":["Minigames"]}},"/minigames/{readingMaterialID}/wordsFromLetters":{"get":{"operationId":"MinigamesController_findWordsFromLettersMinigame","parameters":[{"name":"readingMaterialID","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":""}},"security":[{"JWT-auth":[]}],"summary":"Get WordsFromLetters minigame for a specific reading material","tags":["Minigames"]}},"/minigames/{readingSessionID}/complete":{"post":{"operationId":"MinigamesController_getMinigamesCompletion","parameters":[{"name":"readingSessionID","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"201":{"description":""}},"security":[{"JWT-auth":[]}],"summary":"Create a completion status of minigames for a specific reading session","tags":["Minigames"]}},"/minigames/logs/SentenceRearrangement":{"post":{"operationId":"MinigamesController_createSentenceRearrangementLog","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateMinigameLogDto"}}}},"responses":{"201":{"description":""}},"security":[{"JWT-auth":[]}],"summary":"Create a log for SentenceRearrangement minigame","tags":["Minigames"]}},"/minigames/logs/Choices":{"post":{"operationId":"MinigamesController_createChoicesLog","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateMinigameLogDto"}}}},"responses":{"201":{"description":""}},"security":[{"JWT-auth":[]}],"summary":"Create a log for Choices minigame","tags":["Minigames"]}},"/minigames/logs/WordsFromLetters":{"post":{"operationId":"MinigamesController_createWordsFromLettersLog","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateMinigameLogDto"}}}},"responses":{"201":{"description":""}},"security":[{"JWT-auth":[]}],"summary":"Create a log for WordsFromLetters minigame","tags":["Minigames"]}}},"info":{"title":"LexiLearner API","description":"","version":"1.0","contact":{},"license":{"name":"MIT","url":"https://opensource.org/licenses/MIT"}},"tags":[],"servers":[{"url":"http://localhost:3000","description":"Development server"}],"components":{"schemas":{"RegisterDto":{"type":"object","properties":{"username":{"type":"string","description":"Username","example":"johndoe1","minLength":8},"first_name":{"type":"string","description":"User first name","example":"John","minLength":1},"last_name":{"type":"string","description":"User last name","example":"Doe","minLength":1},"email":{"type":"string","description":"User email","example":"john.doe@example.com"},"password":{"type":"string","description":"User password","example":"securePassword123"},"confirm_password":{"type":"string","description":"Password confirmation","example":"securePassword123"},"role":{"type":"string","description":"User role","example":"Pupil","enum":["Pupil","Teacher"]}},"required":["username","first_name","last_name","email","password","confirm_password","role"]},"UserResponseDto":{"type":"object","properties":{"id":{"type":"string","description":"User ID","example":"123e4567-e89b-12d3-a456-426614174000"},"email":{"type":"string","description":"Email","nullable":true},"first_name":{"type":"string","description":"First name","nullable":true},"last_name":{"type":"string","description":"Last name","nullable":true},"role":{"type":"string","description":"User role","nullable":true},"created_at":{"format":"date-time","type":"string","description":"Created at"},"updated_at":{"format":"date-time","type":"string","description":"Created at"}},"required":["id","email","first_name","last_name","role"]},"AuthResponseDto":{"type":"object","properties":{"access_token":{"type":"string","description":"Access token"},"user":{"description":"User info","allOf":[{"$ref":"#/components/schemas/UserResponseDto"}]},"refresh_token":{"type":"string","description":"Refresh token"}},"required":["access_token","user"]},"ErrorResponseDto":{"type":"object","properties":{"status":{"type":"string","description":"Status of the response","example":"error"},"message":{"type":"string","description":"Error message","example":"Invalid credentials"}},"required":["status","message"]},"LoginDto":{"type":"object","properties":{"email":{"type":"string","description":"User email","example":"john.doe@example.com"},"password":{"type":"string","description":"User password","example":"securePassword123"}},"required":["email","password"]},"SuccessResponseDto":{"type":"object","properties":{"message":{"type":"string","description":"Success message","example":"User created successfully"},"data":{"type":"object","description":"Returned data payload"}},"required":["message","data"]},"RefreshTokenDto":{"type":"object","properties":{"refresh_token":{"type":"string","description":"Refresh token"}},"required":["refresh_token"]},"ForgotPasswordDto":{"type":"object","properties":{"email":{"type":"string","description":"User email","example":"john.doe@example.com"}},"required":["email"]},"ResetPasswordDto":{"type":"object","properties":{"token":{"type":"string","description":"Reset token"},"new_password":{"type":"string","description":"New password","example":"newSecurePassword123"}},"required":["token","new_password"]},"UpdateProfileDto":{"type":"object","properties":{"username":{"type":"string","description":"Username","example":"janes123","minLength":8},"first_name":{"type":"string","description":"First name","example":"Jane"},"last_name":{"type":"string","description":"Last name","example":"Smith"},"email":{"type":"string","description":"Email address"},"avatar":{"type":"string","description":"Avatar"}}},"ChangePasswordDto":{"type":"object","properties":{"current_password":{"type":"string","description":"Current password"},"new_password":{"type":"string","description":"New password"}},"required":["current_password","new_password"]},"UpdatePupilProfileDto":{"type":"object","properties":{"age":{"type":"number","description":"Age","example":10},"grade_level":{"type":"number","description":"Grade Level","example":6}},"required":["age","grade_level"]},"CreateClassroomDto":{"type":"object","properties":{"name":{"type":"string","description":"Classroom Name","example":"Section Maya"},"description":{"type":"string","description":"Classroom Name","example":"Section Maya"}},"required":["name","description"]},"UpdateClassroomDto":{"type":"object","properties":{}},"CreateMinigameLogDto":{"type":"object","properties":{"minigame_id":{"type":"string","description":"Minigame ID"},"pupil_id":{"type":"string","description":"Pupil ID"},"reading_session_id":{"type":"string","description":"Reading Session ID"},"result":{"type":"string","description":"Minigame Result in JSON format"}},"required":["minigame_id","pupil_id","reading_session_id","result"]}}}}