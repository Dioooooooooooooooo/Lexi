// This file is auto-generated by @hey-api/openapi-ts

export type RegisterDto = {
    /**
     * Username
     */
    username: string;
    /**
     * User first name
     */
    first_name: string;
    /**
     * User last name
     */
    last_name: string;
    /**
     * User email
     */
    email: string;
    /**
     * User password
     */
    password: string;
    /**
     * Password confirmation
     */
    confirm_password: string;
    /**
     * User role
     */
    role: 'Pupil' | 'Teacher';
};

/**
 * User role
 */
export type role = 'Pupil' | 'Teacher';

export type UserResponseDto = {
    /**
     * User ID
     */
    id: string;
    /**
     * Email
     */
    email: string | null;
    /**
     * First name
     */
    first_name: string | null;
    /**
     * Last name
     */
    last_name: string | null;
    /**
     * User role
     */
    role: string | null;
    /**
     * Created at
     */
    created_at?: string;
    /**
     * Created at
     */
    updated_at?: string;
};

export type AuthResponseDto = {
    /**
     * Access token
     */
    access_token: string;
    /**
     * User info
     */
    user: UserResponseDto;
    /**
     * Refresh token
     */
    refresh_token?: string;
};

export type ErrorResponseDto = {
    /**
     * Status of the response
     */
    status: string;
    /**
     * Error message
     */
    message: string;
};

export type LoginDto = {
    /**
     * User email
     */
    email: string;
    /**
     * User password
     */
    password: string;
};

export type SuccessResponseDto = {
    /**
     * Success message
     */
    message: string;
    /**
     * Returned data payload
     */
    data: {
        [key: string]: unknown;
    };
};

export type RefreshTokenDto = {
    /**
     * Refresh token
     */
    refresh_token: string;
};

export type ForgotPasswordDto = {
    /**
     * User email
     */
    email: string;
};

export type ResetPasswordDto = {
    /**
     * Reset token
     */
    token: string;
    /**
     * New password
     */
    new_password: string;
};

export type UpdateProfileDto = {
    /**
     * Username
     */
    username?: string;
    /**
     * First name
     */
    first_name?: string;
    /**
     * Last name
     */
    last_name?: string;
    /**
     * Email address
     */
    email?: string;
    /**
     * Avatar
     */
    avatar?: string;
};

export type ChangePasswordDto = {
    /**
     * Current password
     */
    current_password: string;
    /**
     * New password
     */
    new_password: string;
};

export type UpdatePupilProfileDto = {
    /**
     * Age
     */
    age: number;
    /**
     * Grade Level
     */
    grade_level: number;
};

export type CreateClassroomDto = {
    /**
     * Classroom Name
     */
    name: string;
    /**
     * Classroom Name
     */
    description: string;
};

export type UpdateClassroomDto = {
    [key: string]: unknown;
};

export type CreateMinigameLogDto = {
    /**
     * Minigame ID
     */
    minigame_id: string;
    /**
     * Pupil ID
     */
    pupil_id: string;
    /**
     * Reading Session ID
     */
    reading_session_id: string;
    /**
     * Minigame Result in JSON format
     */
    result: string;
};

export type GetResponse = unknown;

export type GetHealthResponse = unknown;

export type PostAuthRegisterData = {
    /**
     * User registration data
     */
    requestBody: RegisterDto;
};

export type PostAuthRegisterResponse = AuthResponseDto;

export type PostAuthLoginData = {
    /**
     * User login credentials
     */
    requestBody: LoginDto;
};

export type PostAuthLoginResponse = SuccessResponseDto;

export type PostAuthRefreshData = {
    /**
     * Refresh token
     */
    requestBody: RefreshTokenDto;
};

export type PostAuthRefreshResponse = SuccessResponseDto;

export type PostAuthForgotPasswordData = {
    /**
     * User email for password reset
     */
    requestBody: ForgotPasswordDto;
};

export type PostAuthForgotPasswordResponse = SuccessResponseDto;

export type PostAuthResetPasswordData = {
    /**
     * Reset token and new password
     */
    requestBody: ResetPasswordDto;
};

export type PostAuthResetPasswordResponse = SuccessResponseDto;

export type PostAuthRequestEmailVerificationResponse = SuccessResponseDto;

export type GetAuthVerifyEmailData = {
    /**
     * Email verification token
     */
    token: string;
};

export type GetAuthVerifyEmailResponse = SuccessResponseDto;

export type GetAuthMeResponse = SuccessResponseDto;

export type PatchAuthMeData = {
    /**
     * Profile update data
     */
    requestBody: UpdateProfileDto;
};

export type PatchAuthMeResponse = SuccessResponseDto;

export type PostAuthChangePasswordData = {
    /**
     * Current and new password
     */
    requestBody: ChangePasswordDto;
};

export type PostAuthChangePasswordResponse = SuccessResponseDto;

export type PostAuthLogoutData = {
    /**
     * Optional refresh token to revoke
     */
    requestBody?: {
        refresh_token?: string;
    };
};

export type PostAuthLogoutResponse = SuccessResponseDto;

export type GetAuthVerifyTokenResponse = {
    valid?: boolean;
    user?: UserResponseDto;
};

export type GetAuthDebugLoginByEmailData = {
    email: string;
};

export type GetAuthDebugLoginByEmailResponse = unknown;

export type GetAuthDebugDbResponse = unknown;

export type GetAuthCheckUserData = {
    /**
     * Type of field to check (email or username)
     */
    fieldType: 'email' | 'username';
    /**
     * Value to check
     */
    fieldValue: string;
};

export type GetAuthCheckUserResponse = SuccessResponseDto;

export type GetAuthProfileResponse = UserResponseDto;

export type GetPupilsMeResponse = SuccessResponseDto;

export type PatchPupilsMeData = {
    /**
     * Pupil profile update data
     */
    requestBody: UpdatePupilProfileDto;
};

export type PatchPupilsMeResponse = SuccessResponseDto;

export type GetPupilsLeaderboardResponse = SuccessResponseDto;

export type GetPupilsLeaderboardByPupilIdResponse = SuccessResponseDto;

export type GetPupilsByUsernameData = {
    username: string;
};

export type GetPupilsByUsernameResponse = SuccessResponseDto;

export type PostClassroomsData = {
    /**
     * Create classroom data
     */
    requestBody: CreateClassroomDto;
};

export type PostClassroomsResponse = SuccessResponseDto;

export type GetClassroomsResponse = unknown;

export type GetClassroomsByIdData = {
    id: string;
};

export type GetClassroomsByIdResponse = unknown;

export type PatchClassroomsByIdData = {
    id: string;
    requestBody: UpdateClassroomDto;
};

export type PatchClassroomsByIdResponse = unknown;

export type DeleteClassroomsByIdData = {
    id: string;
};

export type DeleteClassroomsByIdResponse = unknown;

export type GetMinigamesReadingmaterialsByReadingMaterialIdRandomData = {
    readingMaterialId: string;
};

export type GetMinigamesReadingmaterialsByReadingMaterialIdRandomResponse = unknown;

export type GetMinigamesByReadingSessionIdRandomData = {
    readingSessionId: string;
};

export type GetMinigamesByReadingSessionIdRandomResponse = unknown;

export type GetMinigamesByReadingMaterialIdWordsFromLettersData = {
    readingMaterialId: string;
};

export type GetMinigamesByReadingMaterialIdWordsFromLettersResponse = unknown;

export type PostMinigamesByReadingSessionIdCompleteData = {
    readingSessionId: string;
};

export type PostMinigamesByReadingSessionIdCompleteResponse = unknown;

export type PostMinigamesLogsSentenceRearrangementData = {
    requestBody: CreateMinigameLogDto;
};

export type PostMinigamesLogsSentenceRearrangementResponse = unknown;

export type PostMinigamesLogsChoicesData = {
    requestBody: CreateMinigameLogDto;
};

export type PostMinigamesLogsChoicesResponse = unknown;

export type PostMinigamesLogsWordsFromLettersData = {
    requestBody: CreateMinigameLogDto;
};

export type PostMinigamesLogsWordsFromLettersResponse = unknown;

export type $OpenApiTs = {
    '/': {
        get: {
            res: {
                200: unknown;
            };
        };
    };
    '/health': {
        get: {
            res: {
                200: unknown;
            };
        };
    };
    '/auth/register': {
        post: {
            req: PostAuthRegisterData;
            res: {
                /**
                 * User successfully registered
                 */
                201: AuthResponseDto;
                /**
                 * Invalid input data
                 */
                400: ErrorResponseDto;
                /**
                 * User already exists
                 */
                409: ErrorResponseDto;
            };
        };
    };
    '/auth/login': {
        post: {
            req: PostAuthLoginData;
            res: {
                /**
                 * User successfully logged in
                 */
                200: SuccessResponseDto;
                /**
                 * Invalid input data
                 */
                400: ErrorResponseDto;
                /**
                 * Invalid credentials
                 */
                401: ErrorResponseDto;
            };
        };
    };
    '/auth/refresh': {
        post: {
            req: PostAuthRefreshData;
            res: {
                /**
                 * Token refreshed successfully
                 */
                200: SuccessResponseDto;
                /**
                 * Invalid refresh token
                 */
                401: ErrorResponseDto;
            };
        };
    };
    '/auth/forgot-password': {
        post: {
            req: PostAuthForgotPasswordData;
            res: {
                /**
                 * Password reset email sent (if email exists)
                 */
                200: SuccessResponseDto;
                /**
                 * Invalid input data
                 */
                400: ErrorResponseDto;
            };
        };
    };
    '/auth/reset-password': {
        post: {
            req: PostAuthResetPasswordData;
            res: {
                /**
                 * Password reset successfully
                 */
                200: SuccessResponseDto;
                /**
                 * Invalid or expired reset token
                 */
                400: ErrorResponseDto;
            };
        };
    };
    '/auth/request-email-verification': {
        post: {
            res: {
                /**
                 * Email verication sent.
                 */
                200: SuccessResponseDto;
            };
        };
    };
    '/auth/verify-email': {
        get: {
            req: GetAuthVerifyEmailData;
            res: {
                /**
                 * Email verified successfully
                 */
                200: SuccessResponseDto;
                /**
                 * Invalid or expired verification token
                 */
                400: ErrorResponseDto;
            };
        };
    };
    '/auth/me': {
        get: {
            res: {
                /**
                 * User profile retrieved successfully
                 */
                200: SuccessResponseDto;
                /**
                 * Invalid or missing token
                 */
                401: ErrorResponseDto;
            };
        };
        patch: {
            req: PatchAuthMeData;
            res: {
                /**
                 * Profile updated successfully
                 */
                200: SuccessResponseDto;
                /**
                 * Invalid or missing token
                 */
                401: ErrorResponseDto;
                /**
                 * Email already exists
                 */
                409: ErrorResponseDto;
            };
        };
    };
    '/auth/change-password': {
        post: {
            req: PostAuthChangePasswordData;
            res: {
                /**
                 * Password changed successfully
                 */
                200: SuccessResponseDto;
                /**
                 * Invalid or missing token / Current password incorrect
                 */
                401: ErrorResponseDto;
            };
        };
    };
    '/auth/logout': {
        post: {
            req: PostAuthLogoutData;
            res: {
                /**
                 * User successfully logged out
                 */
                200: SuccessResponseDto;
                /**
                 * Invalid or missing token
                 */
                401: ErrorResponseDto;
            };
        };
    };
    '/auth/verify-token': {
        get: {
            res: {
                /**
                 * Token is valid
                 */
                200: {
                    valid?: boolean;
                    user?: UserResponseDto;
                };
                /**
                 * Invalid or expired token
                 */
                401: ErrorResponseDto;
            };
        };
    };
    '/auth/debug-login/{email}': {
        get: {
            req: GetAuthDebugLoginByEmailData;
            res: {
                200: unknown;
            };
        };
    };
    '/auth/debug-db': {
        get: {
            res: {
                200: unknown;
            };
        };
    };
    '/auth/check-user': {
        get: {
            req: GetAuthCheckUserData;
            res: {
                /**
                 * Field is available
                 */
                200: SuccessResponseDto;
                /**
                 * Invalid field type or missing parameters
                 */
                400: ErrorResponseDto;
                /**
                 * Field already exists
                 */
                409: ErrorResponseDto;
            };
        };
    };
    '/auth/profile': {
        get: {
            res: {
                /**
                 * User profile retrieved successfully
                 */
                200: UserResponseDto;
                /**
                 * Invalid or missing token
                 */
                401: ErrorResponseDto;
            };
        };
    };
    '/pupils/me': {
        get: {
            res: {
                /**
                 * Pupil profile successfully fetched
                 */
                201: SuccessResponseDto;
                /**
                 * Invalid credentials
                 */
                401: ErrorResponseDto;
            };
        };
        patch: {
            req: PatchPupilsMeData;
            res: {
                /**
                 * Pupil profile successfully updated
                 */
                201: SuccessResponseDto;
                /**
                 * Invalid credentials
                 */
                401: ErrorResponseDto;
            };
        };
    };
    '/pupils/leaderboard': {
        get: {
            res: {
                /**
                 * Global pupil leaderboard successfully fetched
                 */
                201: SuccessResponseDto;
                /**
                 * Invalid credentials
                 */
                401: ErrorResponseDto;
            };
        };
    };
    '/pupils/leaderboard/{pupilId}': {
        get: {
            res: {
                /**
                 * Pupil leaderboard successfully fetched
                 */
                201: SuccessResponseDto;
                /**
                 * Invalid credentials
                 */
                401: ErrorResponseDto;
            };
        };
    };
    '/pupils/{username}': {
        get: {
            req: GetPupilsByUsernameData;
            res: {
                /**
                 * Pupil profile successfully fetched
                 */
                201: SuccessResponseDto;
                /**
                 * Invalid credentials
                 */
                401: ErrorResponseDto;
            };
        };
    };
    '/classrooms': {
        post: {
            req: PostClassroomsData;
            res: {
                /**
                 * Classroom created successfully
                 */
                200: SuccessResponseDto;
                /**
                 * Invalid or missing token
                 */
                401: ErrorResponseDto;
            };
        };
        get: {
            res: {
                200: unknown;
            };
        };
    };
    '/classrooms/{id}': {
        get: {
            req: GetClassroomsByIdData;
            res: {
                200: unknown;
            };
        };
        patch: {
            req: PatchClassroomsByIdData;
            res: {
                200: unknown;
            };
        };
        delete: {
            req: DeleteClassroomsByIdData;
            res: {
                200: unknown;
            };
        };
    };
    '/minigames/readingmaterials/{readingMaterialID}/random': {
        get: {
            req: GetMinigamesReadingmaterialsByReadingMaterialIdRandomData;
            res: {
                200: unknown;
            };
        };
    };
    '/minigames/{readingSessionID}/random': {
        get: {
            req: GetMinigamesByReadingSessionIdRandomData;
            res: {
                200: unknown;
            };
        };
    };
    '/minigames/{readingMaterialID}/wordsFromLetters': {
        get: {
            req: GetMinigamesByReadingMaterialIdWordsFromLettersData;
            res: {
                200: unknown;
            };
        };
    };
    '/minigames/{readingSessionID}/complete': {
        post: {
            req: PostMinigamesByReadingSessionIdCompleteData;
            res: {
                201: unknown;
            };
        };
    };
    '/minigames/logs/SentenceRearrangement': {
        post: {
            req: PostMinigamesLogsSentenceRearrangementData;
            res: {
                201: unknown;
            };
        };
    };
    '/minigames/logs/Choices': {
        post: {
            req: PostMinigamesLogsChoicesData;
            res: {
                201: unknown;
            };
        };
    };
    '/minigames/logs/WordsFromLetters': {
        post: {
            req: PostMinigamesLogsWordsFromLettersData;
            res: {
                201: unknown;
            };
        };
    };
};